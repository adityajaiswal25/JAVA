public class timeandspacecomplexity {

    public static void main(String[] args) {
        System.out.println("Time and Space Complexity in Java \n best average and worst case we always consider worst case - big o notation for every loop it will run n times for example if we have a loop that runs 10 times then it will be O(10) but we always consider worst case so it will be O(n) and for nested loops it will be O(n^2) and for space complexity we consider the space used by the program in terms of variables and data structures used for example if we have an array of size n then the space complexity will be O(n) and if we have a nested array then the space complexity will be O(n^2) and \n  for recursive functions we consider the space used by the function call stack so if we have a recursive function that calls itself n times then the space complexity will be O(n) and if we have a recursive function that calls itself n times and has a loop that runs n times then the space complexity will be O(n^2) and  \n for sorting algorithms we consider the time complexity of the algorithm for example bubble sort has a time complexity of O(n^2) and quicksort has a time complexity of O(n log n) and for searching algorithms we consider the time complexity of the algorithm for example linear search has a time complexity of O(n) and binary search has a time complexity of O(log n) \n space complexity is the amount of memory used by the program in terms of variables and data structures used \n for example if we have an array of size n then the space complexity will be O(n) and if we have a nested array then the space complexity will be O(n^2) and \n for recursive functions we consider the space used by the function call stack so if we have a recursive function that calls itself n times then the space complexity will be O(n) and if we have a recursive function that calls itself n times and has a loop that runs n times then the space complexity will be O(n^2) and for sorting algorithms we consider the time complexity of the algorithm for example bubble sort has a time complexity of O(n^2) and quicksort has a time complexity of O(n log n) and for searching algorithms we consider the time complexity of the algorithm for example linear search has a time complexity of O(n) and binary search has a time complexity of O(log n)");
    }
}
